name: Shared Electron CI (composite)

on:
  workflow_call:
    inputs:
      app_ref:          { type: string, required: false }
      app_repo:         { type: string, required: true }
      release_channel:  { type: string, required: true }
      s3_bucket:        { type: string, required: true }
      aws_region:       { type: string, required: false, default: "eu-central-1" }
      publish_base_url: { type: string, required: true }
      secrets_mac:      { type: string, required: true }
      secrets_win:      { type: string, required: true }
      product_path:     { type: string, required: false, default: "releases" }
      node_version:     { type: string, required: false, default: "22.11.0" }
      enable_windows:   { type: boolean, required: false, default: false }

jobs:
  mac:
    uses: ./.github/workflows/electron-ci-mac.yml
    with:
      app_ref:          ${{ inputs.app_ref }}
      app_repo:         ${{ inputs.app_repo }}
      release_channel:  ${{ inputs.release_channel }}
      s3_bucket:        ${{ inputs.s3_bucket }}
      aws_region:       ${{ inputs.aws_region }}
      publish_base_url: ${{ inputs.publish_base_url }}
      secrets_name:     ${{ inputs.secrets_mac }}
      product_path:     ${{ inputs.product_path }}
      node_version:     ${{ inputs.node_version }}

  win:
    if: ${{ inputs.enable_windows }}
    uses: ./.github/workflows/electron-ci-win.yml
    with:
      app_ref:          ${{ inputs.app_ref }}
      app_repo:         ${{ inputs.app_repo }}
      release_channel:  ${{ inputs.release_channel }}
      s3_bucket:        ${{ inputs.s3_bucket }}
      aws_region:       ${{ inputs.aws_region }}
      publish_base_url: ${{ inputs.publish_base_url }}
      secrets_name:     ${{ inputs.secrets_win }}
      product_path:     ${{ inputs.product_path }}
      node_version:     ${{ inputs.node_version }}

  finalize:
    needs: [mac]
    environment: ${{ inputs.release_channel }}
    runs-on: ubuntu-latest
    permissions: { id-token: write, contents: read }
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.ELECTRON_PUBLISH_ROLE_ARN }}
          aws-region: ${{ inputs.aws_region }}
      - name: Write channel pointer
        env:
          BUCKET:       ${{ inputs.s3_bucket }}
          PRODUCT_PATH: ${{ inputs.product_path }}
          CHANNEL:      ${{ inputs.release_channel }}
        run: |
          set -euo pipefail
          printf '{"channel":"%s"}\n' "$CHANNEL" > channel.json
          aws s3 cp channel.json "s3://${BUCKET}/${PRODUCT_PATH}/${CHANNEL}/channel.json" --only-show-errors

